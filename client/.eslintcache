[{"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/index.js":"1","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/App.js":"2","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/MainSite.js":"3","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/messages/Loading.js":"4","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/messages/Error.js":"5","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/layouts/NavbarLayout.js":"6","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/Settings.js":"7","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/Statistics.js":"8"},{"size":196,"mtime":1609155765806,"results":"9","hashOfConfig":"10"},{"size":573,"mtime":1609355363077,"results":"11","hashOfConfig":"10"},{"size":1649,"mtime":1609358292167,"results":"12","hashOfConfig":"10"},{"size":402,"mtime":1609370388890,"results":"13","hashOfConfig":"10"},{"size":942,"mtime":1609351443413,"results":"14","hashOfConfig":"10"},{"size":1572,"mtime":1609355739370,"results":"15","hashOfConfig":"10"},{"size":1597,"mtime":1609370666167,"results":"16","hashOfConfig":"10"},{"size":1266,"mtime":1609459160168,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"129971b",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/index.js",[],["38","39"],"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/App.js",[],"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/MainSite.js",["40","41"],"import React, { useEffect, useState } from \"react\";\nimport NavbarLayout from \"./layouts/NavbarLayout\";\nimport { ReactComponent as Settings } from \"../assets/settings.svg\";\nimport { ReactComponent as Statistics } from \"../assets/statistics.svg\";\n\nimport { Col, Row, Container } from \"reactstrap\";\nimport { useHistory } from \"react-router-dom\";\n\nconst MainSite = () => {\n  const history = useHistory();\n  return (\n    <>\n      <NavbarLayout />\n      <Container>\n        <Row className=\"text-center\" style={{ marginTop: \"50px\" }}>\n          <Col lg=\"6\" md=\"6\" sm=\"12\">\n            <button\n              style={{\n                outline: \"none\",\n                border: \"none\",\n                backgroundColor: \"transparent\",\n                color: \"white\",\n              }}\n              onClick={() => {\n                history.push(\"/nastaveni\");\n              }}\n            >\n              <Settings\n                style={{ height: \"40vh\", width: \"100%\" }}\n                href=\"/nastaveni\"\n              />\n            </button>\n          </Col>\n          <Col lg=\"6\" md=\"6\" sm=\"12\">\n            <button\n              style={{\n                outline: \"none\",\n                border: \"none\",\n                backgroundColor: \"transparent\",\n                color: \"white\",\n              }}\n              onClick={() => {\n                history.push(\"/statistiky\");\n              }}\n            >\n              <Statistics\n                style={{ height: \"40vh\", width: \"100%\" }}\n                href=\"/statistiky\"\n              />\n            </button>\n          </Col>\n        </Row>\n      </Container>\n    </>\n  );\n};\nexport default MainSite;\n","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/messages/Loading.js",[],"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/messages/Error.js",[],"/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/layouts/NavbarLayout.js",["42","43","44","45"],"import React, { useState } from \"react\";\n\nimport {\n  Navbar,\n  Nav,\n  NavItem,\n  NavLink,\n  NavbarToggler,\n  Collapse,\n  NavbarBrand,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  NavbarText,\n} from \"reactstrap\";\n\nimport { ReactComponent as Logo } from \"../../assets/multimeter.svg\";\n\nconst NavbarLayout = () => {\n  const [collapsed, setCollapsed] = useState(true);\n\n  const toggleNavbar = () => setCollapsed(!collapsed);\n  return (\n    <Navbar color=\"faded\" light expand=\"sm\" style={{ fontSize: \"20pt\" }}>\n      <NavbarBrand href=\"/\">\n        <Logo style={{ height: \"75px\" }} />\n      </NavbarBrand>\n      <Nav className=\"mr-auto\" navbar>\n        <NavItem>\n          <NavLink href=\"/nastaveni\">Nastavení</NavLink>\n        </NavItem>\n        <NavItem>\n          <NavLink href=\"/statistiky\">Statistiky</NavLink>\n        </NavItem>\n        <UncontrolledDropdown nav inNavbar>\n          <DropdownToggle nav caret>\n            Odkazy\n          </DropdownToggle>\n          <DropdownMenu right>\n            <DropdownItem href=\"https://github.com/Soukupis/MultimeterWebApp\">\n              Repozitář projektu\n            </DropdownItem>\n            <DropdownItem href=\"https://github.com/Soukupis/MultimeterWebApp/tree/master/client\">\n              Client\n            </DropdownItem>\n            <DropdownItem href=\"https://github.com/Soukupis/MultimeterWebApp/tree/master/api\">\n              Api\n            </DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      </Nav>\n    </Navbar>\n  );\n};\nexport default NavbarLayout;\n","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/Settings.js",["46","47"],"import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport Loading from \"./messages/Loading\";\nimport Error from \"./messages/Error\";\nimport NavbarLayout from \"./layouts/NavbarLayout\";\n\nimport { Container } from \"reactstrap\";\n\nconst Settings = () => {\n  const [loading, setLoading] = useState();\n  const [error, setError] = useState();\n  const [ports, setPorts] = useState();\n  const [modes, setModes] = useState();\n  const [data, setData] = useState();\n\n  useEffect(() => {\n    setLoading(true);\n    setError(false);\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/main/getModes`)\n      .then((response) => {\n        setModes(response.data);\n      })\n      .catch((error) => {\n        setError(true);\n      });\n    axios\n      .get(`${process.env.REACT_APP_API_URL}/main/getPorts`)\n      .then((response) => {\n        setPorts(response.data);\n      })\n      .catch((error) => {\n        setError(true);\n      })\n      .then(() => {\n        setLoading(false);\n      });\n  }, []);\n  if (error) {\n    return <Error />;\n  } else if (loading) {\n    return <Loading />;\n  } else if (ports && modes) {\n    return (\n      <>\n        <NavbarLayout />\n        <Container>\n          <h1>Modes</h1>\n          <div>\n            {modes.map((item) => {\n              return <div>{item}</div>;\n            })}\n          </div>\n          <h1>Ports</h1>\n          <div>\n            {ports.map((item) => {\n              return <div>{item}</div>;\n            })}\n          </div>\n        </Container>\n      </>\n    );\n  } else {\n    return <Loading />;\n  }\n};\nexport default Settings;\n","/Users/josephsoukup/DocumentsLocal/MultimeterWebApp/client/src/components/Statistics.js",["48","49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":1,"column":17,"nodeType":"56","messageId":"57","endLine":1,"endColumn":26},{"ruleId":"54","severity":1,"message":"58","line":1,"column":28,"nodeType":"56","messageId":"57","endLine":1,"endColumn":36},{"ruleId":"54","severity":1,"message":"59","line":8,"column":3,"nodeType":"56","messageId":"57","endLine":8,"endColumn":16},{"ruleId":"54","severity":1,"message":"60","line":9,"column":3,"nodeType":"56","messageId":"57","endLine":9,"endColumn":11},{"ruleId":"54","severity":1,"message":"61","line":15,"column":3,"nodeType":"56","messageId":"57","endLine":15,"endColumn":13},{"ruleId":"54","severity":1,"message":"62","line":23,"column":9,"nodeType":"56","messageId":"57","endLine":23,"endColumn":21},{"ruleId":"54","severity":1,"message":"63","line":14,"column":10,"nodeType":"56","messageId":"57","endLine":14,"endColumn":14},{"ruleId":"54","severity":1,"message":"64","line":14,"column":16,"nodeType":"56","messageId":"57","endLine":14,"endColumn":23},{"ruleId":"54","severity":1,"message":"65","line":30,"column":12,"nodeType":"56","messageId":"57","endLine":30,"endColumn":22},{"ruleId":"66","severity":1,"message":"67","line":33,"column":21,"nodeType":"68","messageId":"69","endLine":33,"endColumn":23},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'NavbarToggler' is defined but never used.","'Collapse' is defined but never used.","'NavbarText' is defined but never used.","'toggleNavbar' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","'renderData' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-global-assign","no-unsafe-negation"]